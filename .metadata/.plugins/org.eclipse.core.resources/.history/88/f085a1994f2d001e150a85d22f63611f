package GestionalePrenotazioni.services;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import GestionalePrenotazioni.entities.Workspace;
import GestionalePrenotazioni.repositories.WorkspaceRepository;
import GestionalePrenotazioni.utils.WorkspaceType;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class WorkspaceService {

	@Autowired
	private WorkspaceRepository workspaceRepo;

	public void saveWorkspace(Workspace workspace) {

		workspaceRepo.save(workspace);
		log.info(workspace.getId() + " - " + workspace.getDescription() + " - " + workspace.getType() + " - "
				+ workspace.getMaxCapacity() + " - " + workspace.getBuilding() + " => " + " Saved on DB!");
	}

	public List<Workspace> getWorkspaceByCity(String city) {
		List<Workspace> workspaces = workspaceRepo.findByCountryBuilding(city);

		if (workspaces.isEmpty()) {
			log.info("NO worspaces found in this city");
		} else {
			log.info("Workspaces found fot this country {}", city);
			for (Workspace workspace : workspaces) {
				log.info("ID: {}, Description: {}, Type: {}, Max Capacity: {}, Building: {}", workspace.getId(),
						workspace.getDescription(), workspace.getType(), workspace.getMaxCapacity(),
						workspace.getBuilding().getCity());
			}
		}
		return workspaces;
	}
	
	public List<Workspace> getPostazioneByTipo(WorkspaceType type) {
		List<Workspace> postazioni = workspaceRepo.findByType(type);

		if (postazioni.isEmpty()) {
			log.info("Nessuna postazione trovata per il tipo: {}", tipo);
		} else {
			log.info("Postazioni trovate per il tipo {}: ", tipo);
			for (Postazione postazione : postazioni) {
				log.info("ID: {}, Descrizione: {}, Tipo: {}, Occupati Max: {}, Edificio: {}", postazione.getId(),
						postazione.getDescrizione(), postazione.getTipo(), postazione.getOccupatiMax(),
						postazione.getEdificio().getCitta());
			}
		}

		return postazioni;
	}
}
